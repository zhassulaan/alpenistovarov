{"ast":null,"code":"import { guestInstance, authInstance } from \"./index\";\n\n/*\n * Создание, обновление и удаление категории, получение списка всех категорий\n */\nexport const createCategory = async category => {\n  const {\n    data\n  } = await authInstance.post(\"category/create\", category);\n  return data;\n};\nexport const createSubCategory = async subcategory => {\n  const {\n    data\n  } = await authInstance.post(\"category/create/subcategory\", subcategory);\n  return data;\n};\nexport const updateCategory = async (id, category) => {\n  const {\n    data\n  } = await authInstance.put(`category/update/${id}`, category);\n  return data;\n};\nexport const deleteCategory = async id => {\n  const {\n    data\n  } = await authInstance.delete(`category/delete/${id}`);\n  return data;\n};\nexport const fetchCategories = async () => {\n  const {\n    data\n  } = await guestInstance.get(\"category/getall/category/subcategory\");\n  return data;\n};\n\n/*\n * Создание, обновление и удаление бренда, получение списка всех брендов\n */\nexport const createBrand = async brand => {\n  const {\n    data\n  } = await authInstance.post(\"brand/create\", brand);\n  return data;\n};\nexport const updateBrand = async (id, brand) => {\n  const {\n    data\n  } = await authInstance.put(`brand/update/${id}`, brand);\n  return data;\n};\nexport const deleteBrand = async id => {\n  const {\n    data\n  } = await authInstance.delete(`brand/delete/${id}`);\n  return data;\n};\nexport const fetchBrands = async () => {\n  const {\n    data\n  } = await guestInstance.get(\"brand/getall\");\n  return data;\n};\n\n/*\n * Создание, обновление и удаление товара, получение списка всех товаров\n */\nexport const createProduct = async product => {\n  const {\n    data\n  } = await authInstance.post(\"product/create\", product);\n  return data;\n};\nexport const updateProduct = async (id, product) => {\n  const {\n    data\n  } = await authInstance.put(`product/update/${id}`, product);\n  return data;\n};\nexport const deleteProduct = async id => {\n  const {\n    data\n  } = await authInstance.delete(`product/delete/${id}`);\n  return data;\n};\nexport const fetchAllProducts = async (categoryId, brandId, page, limit) => {\n  let url = \"product/getall\";\n  // фильтрация товаров по категории и/или бренду\n  if (categoryId) url = url + \"/categoryId/\" + categoryId;\n  if (brandId) url = url + \"/brandId/\" + brandId;\n  const {\n    data\n  } = await guestInstance.get(url, {\n    // params: {\n    //   // GET-параметры для постраничной навигации\n    //   page,\n    //   limit,\n    // },\n  });\n  return data;\n};\nexport const fetchOneProduct = async id => {\n  const {\n    data\n  } = await guestInstance.get(`product/getone/${id}`);\n  return data;\n};\nexport const fetchProductsByCategory = async category => {\n  let url = \"product/getall/category\";\n  // фильтрация товаров по категории и/или бренду\n\n  const {\n    data\n  } = await guestInstance.post(url, {\n    category\n  });\n  return data;\n};\nexport const fetchProductsByName = async productName => {\n  let url = \"product/getall/productname\";\n  // фильтрация товаров по названию\n\n  const {\n    data\n  } = await guestInstance.post(url, {\n    productName\n  });\n  return data;\n};\nexport const fetchProductsByFilter = async filters => {\n  let url = \"product/getall/filter\";\n  // фильтрация товаров по всем фильтрам\n\n  const {\n    data\n  } = await guestInstance.post(url, {\n    filters\n  });\n  return data;\n};\nexport const fetchProductsBySearch = async key => {\n  let url = `product/search/${key}`;\n  // поиск товаров\n\n  const {\n    data\n  } = await guestInstance.get(url);\n  return data;\n};\nexport const createProductVario = async variation => {\n  const {\n    data\n  } = await authInstance.post(\"variation/create/variation\", variation);\n  return data;\n};\nexport const createProductVariOption = async option => {\n  const {\n    data\n  } = await authInstance.post(\"variation/create/options\", option, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  });\n  return data;\n};\nexport const createProductProp = async (id, prop) => {\n  const {\n    data\n  } = await authInstance.post(`/product/${id}/property/create`, prop);\n  return data;\n};\nexport const addColor = async color => {\n  const {\n    data\n  } = await authInstance.post(\"color/create\", color);\n  return data;\n};\nexport const fetchProductsBySale = async () => {\n  const {\n    data\n  } = await guestInstance.get(\"product/getall/bigsale\");\n  return data;\n};","map":{"version":3,"names":["guestInstance","authInstance","createCategory","category","data","post","createSubCategory","subcategory","updateCategory","id","put","deleteCategory","delete","fetchCategories","get","createBrand","brand","updateBrand","deleteBrand","fetchBrands","createProduct","product","updateProduct","deleteProduct","fetchAllProducts","categoryId","brandId","page","limit","url","fetchOneProduct","fetchProductsByCategory","fetchProductsByName","productName","fetchProductsByFilter","filters","fetchProductsBySearch","key","createProductVario","variation","createProductVariOption","option","headers","createProductProp","prop","addColor","color","fetchProductsBySale"],"sources":["/Users/zhassik/Downloads/yaq/front/src/http/catalogAPI.js"],"sourcesContent":["import { guestInstance, authInstance } from \"./index\";\n\n/*\n * Создание, обновление и удаление категории, получение списка всех категорий\n */\nexport const createCategory = async (category) => {\n  const { data } = await authInstance.post(\"category/create\", category);\n  return data;\n};\n\nexport const createSubCategory = async (subcategory) => {\n  const { data } = await authInstance.post(\n    \"category/create/subcategory\",\n    subcategory\n  );\n  return data;\n};\n\nexport const updateCategory = async (id, category) => {\n  const { data } = await authInstance.put(`category/update/${id}`, category);\n  return data;\n};\n\nexport const deleteCategory = async (id) => {\n  const { data } = await authInstance.delete(`category/delete/${id}`);\n  return data;\n};\n\nexport const fetchCategories = async () => {\n  const { data } = await guestInstance.get(\n    \"category/getall/category/subcategory\"\n  );\n  return data;\n};\n\n/*\n * Создание, обновление и удаление бренда, получение списка всех брендов\n */\nexport const createBrand = async (brand) => {\n  const { data } = await authInstance.post(\"brand/create\", brand);\n  return data;\n};\n\nexport const updateBrand = async (id, brand) => {\n  const { data } = await authInstance.put(`brand/update/${id}`, brand);\n  return data;\n};\n\nexport const deleteBrand = async (id) => {\n  const { data } = await authInstance.delete(`brand/delete/${id}`);\n  return data;\n};\n\nexport const fetchBrands = async () => {\n  const { data } = await guestInstance.get(\"brand/getall\");\n  return data;\n};\n\n/*\n * Создание, обновление и удаление товара, получение списка всех товаров\n */\nexport const createProduct = async (product) => {\n  const { data } = await authInstance.post(\"product/create\", product);\n  return data;\n};\n\nexport const updateProduct = async (id, product) => {\n  const { data } = await authInstance.put(`product/update/${id}`, product);\n  return data;\n};\n\nexport const deleteProduct = async (id) => {\n  const { data } = await authInstance.delete(`product/delete/${id}`);\n  return data;\n};\n\nexport const fetchAllProducts = async (categoryId, brandId, page, limit) => {\n  let url = \"product/getall\";\n  // фильтрация товаров по категории и/или бренду\n  if (categoryId) url = url + \"/categoryId/\" + categoryId;\n  if (brandId) url = url + \"/brandId/\" + brandId;\n  const { data } = await guestInstance.get(url, {\n    // params: {\n    //   // GET-параметры для постраничной навигации\n    //   page,\n    //   limit,\n    // },\n  });\n  return data;\n};\n\nexport const fetchOneProduct = async (id) => {\n  const { data } = await guestInstance.get(`product/getone/${id}`);\n  return data;\n};\n\nexport const fetchProductsByCategory = async (category) => {\n  let url = \"product/getall/category\";\n  // фильтрация товаров по категории и/или бренду\n\n  const { data } = await guestInstance.post(url, {\n    category,\n  });\n  return data;\n};\n\nexport const fetchProductsByName = async (productName) => {\n  let url = \"product/getall/productname\";\n  // фильтрация товаров по названию\n\n  const { data } = await guestInstance.post(url, {\n    productName,\n  });\n  return data;\n};\n\nexport const fetchProductsByFilter = async (filters) => {\n  let url = \"product/getall/filter\";\n  // фильтрация товаров по всем фильтрам\n\n  const { data } = await guestInstance.post(url, {\n    filters,\n  });\n  return data;\n};\n\nexport const fetchProductsBySearch = async (key) => {\n  let url = `product/search/${key}`;\n  // поиск товаров\n\n  const { data } = await guestInstance.get(url);\n  return data;\n};\n\nexport const createProductVario = async (variation) => {\n  const { data } = await authInstance.post(\n    \"variation/create/variation\",\n    variation\n  );\n  return data;\n};\n\nexport const createProductVariOption = async (option) => {\n  const { data } = await authInstance.post(\"variation/create/options\", option, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  });\n  return data;\n};\n\nexport const createProductProp = async (id, prop) => {\n  const { data } = await authInstance.post(\n    `/product/${id}/property/create`,\n    prop\n  );\n  return data;\n};\n\nexport const addColor = async (color) => {\n  const { data } = await authInstance.post(\"color/create\", color);\n  return data;\n};\n\nexport const fetchProductsBySale = async () => {\n  const { data } = await guestInstance.get(\"product/getall/bigsale\");\n  return data;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}